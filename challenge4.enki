separate List into L and R where
    when List = X :: (Y :: Xs) then
        separate Xs into Ls and Rs,
        L = X :: Ls, R = Y :: Rs;
    when List = singleton list X then L = singleton list X, R = empty;
    when List = empty then L = empty, R = empty.

double X is 2*X.

sum digits N is sum of digits of N.

D isa digit if D >= 0, D < 10.

List in luhn form with CheckDigit if
    separate List into L and R,
    NewR = map (sum digits _) over map double over R,
    CheckDigit isa digit,
    10 divides ((sum of L + sum of NewR) + CheckDigit).

when [7,9,9,2,7,3,9,8,7,1] in luhn form with 3 then display "Success: Yay!".
when [7,9,9,2,7,3,9,8,7,1] in luhn form with CheckDigit then display as text CheckDigit.
when not ([7,9,9,2,7,3,9,8,7,1] in luhn form with 5) then display "Failure :(".

